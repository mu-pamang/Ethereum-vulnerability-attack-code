// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

// 토큰 컨트랙트 정의
contract Token {
  // 각 주소의 잔고를 저장하는 매핑
  mapping(address => uint) balances;
  // 토큰의 총 공급량
  uint public totalSupply;

//생성자: 초기 공급량 설정, 컨트랙트 소유자 할당
constructor(uint _initialSupply) public {
  // 컨트랙트 생성자가 호출된 시점의 주소에 초기 공급량을 할당
  balances[msg.sender] = totalSupply = _initialSupply;
}

// 토큰 전송 함수: _to 주소로 _value 만큼의 토큰을 전송
function transfer(address _to, uint _value) public returns (bool) {
  // 보내는 주소의 잔고가 전송량 이상인지 확인
  require(balances[msg.sender] - _value >= 0);
  // 보내는 주소의 잔고에서 전송량을 차감
  balances[msg.sender] -= _value;
  // 받는 주소의 잔고에 전송량을 더함
  balances[_to] += _value;

  // 전송 성공을 나타내는 bool 값 반환
  return true;
}

// 주어진 주소의 잔고를 조회하는 함수
function balanceOf(address _owner) public view returns (uint balance) {
    return balances[_owner];
  }
}
